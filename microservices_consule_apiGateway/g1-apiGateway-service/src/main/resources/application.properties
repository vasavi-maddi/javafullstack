server.port=9001
spring.application.name=apiGateway-service

spring.config.import=optional:configserver:http://localhost:9000
spring.cloud.config.uri=http://localhost:9000

spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.instanceId=${spring.application.name}:${server.port}
spring.cloud.consul.discovery.healthCheckInterval=12s
spring.cloud.consul.config.enabled=false

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*

spring.cloud.gateway.routes[0].id=allergy_route
spring.cloud.gateway.routes[0].uri=lb://allergy/
spring.cloud.gateway.routes[0].predicates[0]=Path=/allergy/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/allergy/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[0].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.name=allergyServiceCircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.fallbackUri=forward:/allergy-service-fallback


spring.cloud.gateway.routes[1].id=patientInfo_service_route
spring.cloud.gateway.routes[1].uri=lb://patient-info/
spring.cloud.gateway.routes[1].predicates[0]=Path=/patient-info/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/patient-info/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[1].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.name=healthRecordServiceCircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/patient-info-service-fallback

spring.cloud.gateway.routes[2].id=authentication_service_route
spring.cloud.gateway.routes[2].uri=lb://authentication/
spring.cloud.gateway.routes[2].predicates[0]=Path=/authentication/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/authentication/(?<segment>.*), /api/v1/$\{segment}
spring.cloud.gateway.routes[2].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.name=healthRecordServiceCircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.fallbackUri=forward:/authentication-service-fallback

spring.devtools.add-properties=false

logging.level.org.hibernate=ERROR
logging.level.com.revature.*=DEBUG
logging.level.org.springframework.cloud.gateway.*=DEBUG

management.endpoint.gateway.enabled=true
management.health.circuitbreakers.enabled=true

management.endpoints.web.exposure.include=*
